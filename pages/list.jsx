import Head from "next/head";

import { useEffect, useState } from "react";

import ProductNew from "../components/ProductNew";
import Product from "../components/Product";
import CreateList from "../components/CreateList";

import styles from "../styles/Home.module.css";

import { supabaseClient } from "../client.js";
import Total from "../components/Total";

import { useRouter } from "next/router"

export default function Home() {
    const router = useRouter()
    const id = router.query.id
    
    
    
    const [posts, setPosts] = useState([]);    
    const [key, setKey] = useState(0);    
    const [post, setPost] = useState({
      name: "",
      qtt: 0,
      price: 0,
      listname: 0,
    });
    
    const { name, qtt, price } = post;   
    

    

  useEffect(() => {
        
    fetchPost(localStorage.getItem("listname") || 123)

    autoLoad((post) => {
      setPosts((prev) => {
        return [...prev, post];
      });
    });
  }, []);

  async function fetchPost(callback) {  
    
    const { data, error } = await supabaseClient
      .from("produtos")
      .select()
      .order("id", { ascending: true })
      .eq("listname", localStorage.getItem("listname"));
      setPosts(data);
      console.log("error:", error);
      //callback(id)
      
      

  }

  function autoLoad(callBack) {
    return supabaseClient
      .from("produtos")
      .on("INSERT", (res) => {
        callBack(res.new);
      })
      .subscribe();
     
  }
  

  async function createPost(name, qtt, price) {
    
    await supabaseClient
      .from("produtos")
      .insert([{ name, qtt, price, listname:localStorage.getItem("listname") }])
      .single();
      setPost({ name: "", qtt: 0, price: 0, listname:0 });
      fetchPost();
  }



   function renderProducts(array) {
    
    return array.map((item, i) => {
      
      return (
        <Product key={i} name={item.name} qtt={item.qtt} price={item.price} />
      );
    });
  }

  function setLocalStorage(id){
    
    localStorage.setItem("listname", id)    
  }

  

  return (
    <div className={styles.container}>
      <Head>
        <title>Lista de mercado</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <h1>{id}</h1>
      </header>
      <main>
        <ProductNew createPost={createPost}/>
        <br />
        <div className={styles.listaDeProdutos}>{renderProducts(posts)}</div>
      </main>
      <footer>
        <Total products={posts} />
      </footer>
     
    </div>
  );
}
