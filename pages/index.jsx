import Head from "next/head";

import { useEffect, useState } from "react";

import router, { useRouter } from 'next/router'
import Link from 'next/link'


import styles from "../styles/Home.module.css";

import Image from 'next/image'
import logo from '../public/logo.png'

import { supabaseClient } from "../client.js";
import IconDoubt from "../components/DoubtIcon";

export default function Home() {
  const [listName, setListName] = useState("");
  const [btnHide, setBtnHide] = useState(false);
  //const [ randomKey, setRandomKey ] = useState(0)
  
  async function teste(randomKey) {    

    const { data, error } = await supabaseClient
    .from("keys")
    .select()      
    if(data.find( (item ) => item.listname === randomKey)){
      console.log("fetch:", randomKey);
      return console.log('problema ao cadastrar lista: ', randomKey);
    } else {
    
      await supabaseClient
      .from("keys")
      .insert([{ listname:randomKey}])
      .single();
      //setKey({listname:0 });        
      console.log('lista cadastrada', randomKey)
      
    
    }
  }
  
  async function fetchPost(callback) { 
    //Math.floor(Math.random() * (100000 - 999999 + 1) ) + 999999
    const randomKey  = Math.floor(Math.random() * (100000 - 999999 + 1) ) + 999999
    //callback(Math.floor(Math.random() * (100000 - 999999 + 1) ) + 999999 );
    callback(randomKey);
    
    navegacaoComParams(randomKey);
    console.log("fetchPost:", randomKey)     

  }

  function navegacaoComParams(param){
    localStorage.setItem("listname", param)
    router.push({
        pathname: "/list",
        query: {
            id: param,
            
        }
    })
}

   async function checkList(callback) {         
    const { data, error } = await supabaseClient
    .from("keys")
    .select()
    .eq("listname", listName);
    //localStorage.setItem("listname", data)
    if(data.find( (item ) => item.listname === parseInt(listName))){      
      callback(listName)
      
    }else {
      alert("lista não existe")
    }     
  }
  
function setLocalStorage(listname){
  
  localStorage.setItem("listname", listname)
  navegacaoComParams(listName)
}
  return (
    <div className={styles.container}>
      <Head>
        <title>Lista de mercado</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.indexMain}>
          <form className={styles.formAcesso} >
            <div className={styles.imgLogo}>
             <Image   src={logo} alt="Logo do App Lista de Mercado" className={styles.imgLogo} />
            </div>
            
            <div className={styles.acessarLista}>
             <div className={styles.inputDiv}>
                <input type="number" className={styles.inputAcesso} value={listName} placeholder='código da lista' onChange={e => {
                  e.target.value.length > 0 ? setBtnHide(true) : setBtnHide(false);                  
                  setListName(e.target.value);
                }
                  
                  } />
                <IconDoubt />
             </div>
              <a className={btnHide ? styles.btn : styles.btnHide} onClick={() =>checkList(setLocalStorage)}>Acessar Lista</a>
            </div>
              <hr className={styles.hr} color="#232222" width="80%" size="1"/>                           
              <a className={styles.btn} onClick={() => fetchPost(teste)}>Criar Lista</a>
          </form>
       
      </main>
      <footer>
        
      </footer>
      
    </div>
  );
}
